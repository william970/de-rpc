// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Test.proto

#ifndef PROTOBUF_Test_2eproto__INCLUDED
#define PROTOBUF_Test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace testNamespace {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Test_2eproto();
void protobuf_AssignDesc_Test_2eproto();
void protobuf_ShutdownFile_Test_2eproto();

class NumRequest;
class NumResponse;

// ===================================================================

class NumRequest : public ::google::protobuf::Message {
 public:
  NumRequest();
  virtual ~NumRequest();

  NumRequest(const NumRequest& from);

  inline NumRequest& operator=(const NumRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NumRequest& default_instance();

  void Swap(NumRequest* other);

  // implements Message ----------------------------------------------

  NumRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NumRequest& from);
  void MergeFrom(const NumRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 input1 = 1;
  inline bool has_input1() const;
  inline void clear_input1();
  static const int kInput1FieldNumber = 1;
  inline ::google::protobuf::int32 input1() const;
  inline void set_input1(::google::protobuf::int32 value);

  // optional int32 input2 = 2;
  inline bool has_input2() const;
  inline void clear_input2();
  static const int kInput2FieldNumber = 2;
  inline ::google::protobuf::int32 input2() const;
  inline void set_input2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:testNamespace.NumRequest)
 private:
  inline void set_has_input1();
  inline void clear_has_input1();
  inline void set_has_input2();
  inline void clear_has_input2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 input1_;
  ::google::protobuf::int32 input2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Test_2eproto();
  friend void protobuf_AssignDesc_Test_2eproto();
  friend void protobuf_ShutdownFile_Test_2eproto();

  void InitAsDefaultInstance();
  static NumRequest* default_instance_;
};
// -------------------------------------------------------------------

class NumResponse : public ::google::protobuf::Message {
 public:
  NumResponse();
  virtual ~NumResponse();

  NumResponse(const NumResponse& from);

  inline NumResponse& operator=(const NumResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NumResponse& default_instance();

  void Swap(NumResponse* other);

  // implements Message ----------------------------------------------

  NumResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NumResponse& from);
  void MergeFrom(const NumResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 output = 1;
  inline bool has_output() const;
  inline void clear_output();
  static const int kOutputFieldNumber = 1;
  inline ::google::protobuf::int32 output() const;
  inline void set_output(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:testNamespace.NumResponse)
 private:
  inline void set_has_output();
  inline void clear_has_output();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 output_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Test_2eproto();
  friend void protobuf_AssignDesc_Test_2eproto();
  friend void protobuf_ShutdownFile_Test_2eproto();

  void InitAsDefaultInstance();
  static NumResponse* default_instance_;
};
// ===================================================================

class NumService_Stub;

class NumService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline NumService() {};
 public:
  virtual ~NumService();

  typedef NumService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void add(::google::protobuf::RpcController* controller,
                       const ::testNamespace::NumRequest* request,
                       ::testNamespace::NumResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void minus(::google::protobuf::RpcController* controller,
                       const ::testNamespace::NumRequest* request,
                       ::testNamespace::NumResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(NumService);
};

class NumService_Stub : public NumService {
 public:
  NumService_Stub(::google::protobuf::RpcChannel* channel);
  NumService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~NumService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements NumService ------------------------------------------

  void add(::google::protobuf::RpcController* controller,
                       const ::testNamespace::NumRequest* request,
                       ::testNamespace::NumResponse* response,
                       ::google::protobuf::Closure* done);
  void minus(::google::protobuf::RpcController* controller,
                       const ::testNamespace::NumRequest* request,
                       ::testNamespace::NumResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(NumService_Stub);
};


// ===================================================================


// ===================================================================

// NumRequest

// optional int32 input1 = 1;
inline bool NumRequest::has_input1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NumRequest::set_has_input1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NumRequest::clear_has_input1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NumRequest::clear_input1() {
  input1_ = 0;
  clear_has_input1();
}
inline ::google::protobuf::int32 NumRequest::input1() const {
  return input1_;
}
inline void NumRequest::set_input1(::google::protobuf::int32 value) {
  set_has_input1();
  input1_ = value;
}

// optional int32 input2 = 2;
inline bool NumRequest::has_input2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NumRequest::set_has_input2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NumRequest::clear_has_input2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NumRequest::clear_input2() {
  input2_ = 0;
  clear_has_input2();
}
inline ::google::protobuf::int32 NumRequest::input2() const {
  return input2_;
}
inline void NumRequest::set_input2(::google::protobuf::int32 value) {
  set_has_input2();
  input2_ = value;
}

// -------------------------------------------------------------------

// NumResponse

// optional int32 output = 1;
inline bool NumResponse::has_output() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NumResponse::set_has_output() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NumResponse::clear_has_output() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NumResponse::clear_output() {
  output_ = 0;
  clear_has_output();
}
inline ::google::protobuf::int32 NumResponse::output() const {
  return output_;
}
inline void NumResponse::set_output(::google::protobuf::int32 value) {
  set_has_output();
  output_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace testNamespace

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Test_2eproto__INCLUDED
